# Development-optimized Dockerfile for Voice Testing App
# Single stage with optimal layer caching

FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies in one layer (will be cached)
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsndfile1 \
    libasound2-dev \
    portaudio19-dev \
    python3-dev \
    gcc \
    g++ \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy ONLY requirements first (for maximum caching)
COPY requirements.txt .

# Install Python dependencies (this layer will be cached unless requirements.txt changes)
RUN pip install --upgrade pip && \
    pip install -r requirements.txt

# Copy application code LAST (this layer rebuilds when code changes)
COPY main.py .
COPY tts_providers.py .
COPY voice_agents.py .
COPY voice_agent.py .
COPY templates/ templates/
COPY static/ static/
COPY long-flash-452213-u9-8ae0b27b310f.json .

# Create necessary directories
RUN mkdir -p static/audio

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=2 \
    CMD curl -f http://localhost:8000/ || exit 1

# Run the application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]